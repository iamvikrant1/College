/*
Problem Statement: Deadlock Avoidance Using Semaphores: Implement the deadlock-free solution to Dining
Philosophers problem to illustrate the problem of deadlock and/or starvation that can occur when many
synchronized threads are competing for limited resources.
*/
 
#include<stdio.h>
#include<pthread.h>
#include<semaphore.h>
 
pthread_t tid[5];
sem_t res[5];
sem_t room;
//int i;
 
void *philosopher(int i)
{      
 
        sem_wait(&room);
        printf("\n Room locked for: %d \n",i);
        printf("\n Philosopher %d is Thinking \n",i);
	sem_wait(&res[i]);
	
	printf("\n Philosopher %d is Hungry \n",i);
	sem_wait(&res[(i+1)%5]);
	
	printf("\n Philosopher %d is Eating \n",i);
	sleep(1);
	sem_post(&res[(i+1)%5]);
        	 
	sem_post(&res[i]);
	sem_post(&room);
	printf("\n Room unlocked for: %d \n",i);
	return NULL;
}	 
 
int main()
 
 
{ 
   int i;
     for(i=0;i<5;i++)
       {
        	sem_init(&res[i],0,1);
       }
                sem_init(&room,0,4);
        
        
	for(i=0;i<5;i++)
	{
		pthread_create(&tid[i],NULL,(void *)philosopher,(void *)i);
		
		
	}
	
	
	for(i=0;i<5;i++)
	{
		
		pthread_join(tid[i],NULL);	
	}
	
	for(i=0;i<5;i++)
	{
		sem_destroy(&res[i]);	
	}
	sem_destroy(&room);
	pthread_exit(0);
return 0;
}
/*output
administrator@IT-PL2-PC40:~$ gcc dp.c -lpthread
dp.c: In function ‘main’:
dp.c:45:51: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   pthread_create(&tid[i],NULL,(void *)philosopher,(void *)i);
                                                   ^
administrator@IT-PL2-PC40:~$ ./a.out
 
 Room locked for: 1 
 
 Philosopher 1 is Thinking 
 
 Philosopher 1 is Hungry 
 
 Philosopher 1 is Eating 
 
 Room locked for: 2 
 
 Philosopher 2 is Thinking 
 
 Room locked for: 3 
 
 Philosopher 3 is Thinking 
 
 Philosopher 3 is Hungry 
 
 Philosopher 3 is Eating 
 
 Room locked for: 0 
 
 Philosopher 0 is Thinking 
 
 Philosopher 0 is Hungry 
 
 Philosopher 2 is Hungry 
 
 Room unlocked for: 1 
 
 Room unlocked for: 3 
 
 Philosopher 0 is Eating 
 
 Room locked for: 4 
 
 Philosopher 4 is Thinking 
 
 Philosopher 4 is Hungry 
 
 Philosopher 2 is Eating 
 
 Room unlocked for: 0 
 
 Room unlocked for: 2 
 
 Philosopher 4 is Eating 
 
 Room unlocked for: 4 
administrator@IT-PL2-PC40:~$ */
	
 
 
 
 
 
 
 