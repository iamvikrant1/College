#include<iostream>
using namespace std;
#include<GL/glut.h>
#include<GL/gl.h>
#include<math.h>
 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
void Display();
void SpecialKey(int ,int ,int );
 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
double rotate_x=0,rotate_y=0;
 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
int main(int argc , char **argv)
{
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);
	glutInitWindowPosition(100,100);
    glutInitWindowSize(640,480);
    glutCreateWindow("CUBE ROTATION");
    
    glEnable(GL_DEPTH_TEST);
    glutDisplayFunc(Display);
    glutSpecialFunc(SpecialKey);
    glutMainLoop();
}
 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
void Display()
{
	glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);
	glLoadIdentity();
	 
	glRotatef( rotate_x, 1.0, 0.0, 0.0 );
	glRotatef( rotate_y, 0.0, 1.0, 0.0 );
	//glRotatef( rotate_z, 0.0, 1.0, 0.0 );
	
	glColor3f( 1.0, 0.0, 0.0 );
	glBegin(GL_POLYGON);
	glVertex3f(  0.5, -0.5, -0.5 ); 
	glVertex3f(  0.5,  0.5, -0.5 ); 
	glVertex3f( -0.5,  0.5, -0.5 );
	glVertex3f( -0.5, -0.5, -0.5 );
	glEnd();
	
	glColor3f(   1.0,  1.0,  0.0 );
	glBegin(GL_POLYGON);
	glVertex3f(  0.5, -0.5, 0.5 );
	glVertex3f(  0.5,  0.5, 0.5 );
	glVertex3f( -0.5,  0.5, 0.5 );
	glVertex3f( -0.5, -0.5, 0.5 );
	glEnd();
	
	glColor3f(   0.0,  1.0,  0.0 );
	glBegin(GL_POLYGON);
	glVertex3f( 0.5, -0.5, -0.5 );
	glVertex3f( 0.5,  0.5, -0.5 );
	glVertex3f( 0.5,  0.5,  0.5 );
	glVertex3f( 0.5, -0.5,  0.5 );
	glEnd();
	
	glColor3f(   0.0,  1.0,  1.0 );
	glBegin(GL_POLYGON);
	glVertex3f( -0.5, -0.5,  0.5 );
	glVertex3f( -0.5,  0.5,  0.5 );
	glVertex3f( -0.5,  0.5, -0.5 );
	glVertex3f( -0.5, -0.5, -0.5 );
	glEnd();
 
	glColor3f(   0.0,  0.0,  1.0 );
	glBegin(GL_POLYGON);
	glVertex3f(  0.5,  0.5,  0.5 );
	glVertex3f(  0.5,  0.5, -0.5 );
	glVertex3f( -0.5,  0.5, -0.5 );
	glVertex3f( -0.5,  0.5,  0.5 );
	glEnd();
	 
	glColor3f(   1.0,  0.0,  1.0 );
	glBegin(GL_POLYGON);
	glVertex3f(  0.5, -0.5, -0.5 );
	glVertex3f(  0.5, -0.5,  0.5 );
	glVertex3f( -0.5, -0.5,  0.5 );
	glVertex3f( -0.5, -0.5, -0.5 );
	glEnd();
	 
 	glFlush();
	glutSwapBuffers();
}
 
void SpecialKey(int key,int x,int y)
{
  if (key == GLUT_KEY_RIGHT)
    rotate_y += 5;
 
  else if (key == GLUT_KEY_LEFT)
    rotate_y -= 5;
 
  else if (key == GLUT_KEY_UP)
    rotate_x += 5;
 
  else if (key == GLUT_KEY_DOWN)
    rotate_x -= 5;
 
  glutPostRedisplay();
}